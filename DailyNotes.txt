

Java:
======programming language

	1996
	
	
	Platform Independent

welcome to java

lowercase
										Welcome.java
							
								compiler-->compailation
									javac filename.java
									
									.class
									
									.class--->JVM

				
Identifiers
Variables					container
Datatypes			
methods				extends,implements
OOPS			-->Inheritance,abstraction,polymorphisam,encapsulation
Exception handling
threads
collections


			datatype varname=value

		byte		1 byte  -128 to 127
		short		2 		-32768 to 32767
		int			4		-2147483648 to 
		long		8
				long age=32;	160 bytes
				byte age=32;	20 bytes

		float		4		float value=12.219631827391f;
		double		8		double

		boolean    	1 bit true-1 false-0
		char		2 bytes

					ASCII
					Unicode

		class A					
		{
		
		}
		class B extends A
		{
		
		}
		class C extends B{
		
		}
		
		By default parent class for every java class is java.lang.Object
		By default package avilable for every java file is java.lang
		
		
		JDK-->JRE-->JVM
		
		package-->.class
		jar--->packages
		
		Exception Handling:
		===================
		1)system defined error messages
		2)abnormal termination
		
		
		1)user friendly error messages
		2)normal termination
		
				try--->risky code/error code,catch-->handling code,finally-->cleanup code,
				
				throw--->to throw exception explicitly,throws-->
						
						Object
						Throwable
				
						AIOE
						AE
						NFE
						NPE......
						
						
						error
						exception
						
	Collections:
	==============
	variables--->one value
			int a=123;
				a=124;
				
			arrays
				int array[]={12,22,32,43,.....}
				
				
					1)homogeneous
					2)fixed in size 
					3)methods
			collections	Framework	 
					
					1)homogeneous & heterogeneous
					2)not fixed in size 
					3)methods
					
			ArrayList--10-->16-->25

					(cc*3/2)+1
					
				Autowiring	
				
				
				
Arrays:
========					
					
					
					{{11,32,44},{54,67,98},{90,54,55}};
					
					
					12 22 43
					54 90 43
					78 67 44
					
Collections:
					
					
				Map

						Key,value
						
					
	SOLID	

		1.single responsonbility principle
		
		
		
		
		
		
		
		class Test{
		
		public Test(String name )
		{
		
		}
		m1(){
		
		}
		}
		
		class Hello{
		
		Test test=new Test();
			test.m1();
		}
		
		
		
		
		
		
		
				Servlets	
	

class Login  implements Servlet /GenericServlet/HttpServlet(12 methods)
{


heavy weight 
}	
			
			EJB--->RodJohnson-->interface21-->spring framework-->2003  1.x
			
																		6.x												
			
			
	Spring is a non-invasive framework ,which is used to create light weight and loosley coupled apps		
			
			
			
			loosley coupled
			tightly coupled
			
			
			
			
			spring container -->BeanFactory/ApplicationContext
			
			
			spring framework--->Object life cycle
			
							1)creation of object
							2)wiring the object
							3)configuring object
							4)destroying 
							
			spring core
			spring jdbc
			spring orm
			spring web
			spring aop
			spring security
			spring cloud
			.................
			
			
			spring core /dependency injection module/IOC
			
			//By default spring bean will follow singleton scope
			
			Xml configuration  <beans><bean>
			annotation   @Autowired/@Component/@Configuration/@ComponentScan/@Scope/@Value
			java 			@Bean
			
			
			Note:Spring has given annotations for user defined classes but not for predefined classes .
						@Component/@Service/@Repository
						
						Layered Architecture:
						====================
						gmail login							Business layer/Service layer				DAO/Repository layer
						
						email
						password
						
						UI Layer/presentation layer/controller layer				
						
				JAVA Config		
						
						
						
						
						
			
			
			Spring Aop
			unittesting/mockito
			validations
			exception handling
			
			int a=123;
			a=124;
			
			
			
JDBC:
====

	DDl-create,alter,drop,truncate,rename
	DML--insert,update,delete
	DRL-select

	
	constraints   FK
	
	joins
	
	
	JDBC API:sun micro system
	
		table creation
		Database Dependent querys
		checked exceptions
		No Cache 
	
	
	
	
	JPA	-->sun micro system-->specification
		
		
	ORM tools-->implementation-->hibernate,eclipselink,toplink,ibatis.....
	
	Hibernate-->jars
	
	
	
			1)zero querys(Database)
			2)no table creation
			3)unchecked exceptions
			4)cache support
	
	
	Product Crud
	
	
	Product -->Entity
	
	
	main method class
	
	
	configuration(persistence.xml)
		Database properties 4
		
		
		hibernate  properties :3
		
		spring framework
		
			Configuration		xml,@Bean
		
		
		JPA

			Relations
		Spring MVC 
			
			DB Layer    Business layer     frontend layer (JSP)
			Mysql			Spring mvc		email
											password
		
		
							java 
JSE 					JEE				 		JME		android	
standalone	app(Core java,Apllets,Swings,AWT)
notepad++,eclipse,vlc media player, anti virus,calculator		
		
		
Web applications:gmail/amazon
		www.gmail.com
		
		servlets,spring,jsp,jsf,mvc...


   Servlets,spring MVC(model view controller)



http://localhost:8080/SpringMVCDemo2/


spring mvc +Database+jpa +hibernate-->tomcat+jsp


Servlets-->
.java-->html--JSP-->

index.jsp
<html>

<body>
	<%  System.out.println("from printing statement")  %>
</body>
<html>
	Spring Boot	
		
		1)auto configuration
		2)embeded server 
		3)in memory DB h2
		4)starters(maven)
		5)actuators(end point urls) beans,config,health
		
		
		
	Spring mvc:DispatcherServlet(Front controller)	
		
	Spring boot:	
		
		Lombok
		
		Employee
			eid
			ename
			esal
			eadd
			edesg
			eemail....
			
			
Spring Boot Exceptionhadling


		1.controller level 
		2.application level/global level 
		


Junit 
TDD:Test Driven Development
BDD:Behavioural driven development



Testing

Java Programmers
unit testing




class TestClass
{

	Calculator calci=new Calculator();
	calci.add(1,2);

}


5.x

			Junit Jupiter   5th
			Junit Vintage 	3rd,4th
			Junit Engine(platform)
			
			
			maven
			lombok
			sonar
			junit
			mockito
			logger:
			aop
			
			Spring Boot Rest
			
			postman
			swagger
			
			
			Microservices
			
			System.out.println()
			
					SLF4J-->specification
					
					Log4j implementation
					
					
					log levels
						info
						warn
						debug
						error
						fatal
						
					appender	
						console appender
						file
						database 
						
					layout
						HTML 
						js...

SpringBootRestJpaBankingApp

			Data JPA
			webservices
			logger
			junit+Mockito
			sonar
			maven
			lombok
			postman
			swagger
			mysql
			security
			GIT

	microservices
		config server
		eureka server
		circuit breaker pattern
		centralised logging
		api gate way
		
	Webservices:
	============

		Webservices is a technology which is used to share information between 
		two interoperable appllications

RMI
EJB			JAVA
SP

DCOM		.net
RPC			c/C++
CORBA		Interoperable


		SOAP	->Simple object access protocol
		REST	-->Representational state transfer


JSON-->Jackson



JPA DSL

		constraints
		
			unique,NN,check,PK,FK
		
		PK=Unique+NN
		
		FK-->Relational 
		
		
		
				EmpDept		
		eid  ename    esal 		 edesg    		deptno   dname  dlocation
		1	  x			100		developer		10		  A		  Hyd
		2	  y			200		admin			20		  B		  Banglore
		3	  z			100		hr				30		  C		  Delhi
		4	  l			400		developer		10		  A		  Hyd
		5	  k			760		admin			20		  B		  Banglore
		
		
		
				Dept
		deptno   dname   dloc
		10			A		HYD
		20			B		Banglore
		30			C		Delhi
		
		delete from dept where deptno=10;
		
				EMP  
		eid  ename    esal 		 edesg       deptno  
		1	  x			100		developer		10		
		2	  y			200		admin			20		 
		3	  z			100		hr				30		 
		4	  l			400		developer		10		 
		5	  z			760		admin			20		 
				
		
alter table emp add constraint cts_fk foreign key(deptno)references dept(deptno);
		
		
		JPA
		
		Employee 			Address
		
			Association
		
		composition   aggregation
		
		onetoone
		onetomany
		manytoone
		manytomany
		
		
		Spring Jpa
				autoconfiguration
				embeded server tomcat
				actuators
				starters
				inmemory h2
	DATA JPA	repository
	
	-->CrudRepository
	-->JpaRepository

Microservices:
=============		
	Decompose/Devide/split your large project into smaller services and 
		communicate them where ever required
		
		
		1.devide
		2.communication
		
		Spliting
				i.	independently deployed
				ii.	independently scaled
				iii.independently Tested
				iv. independently developed
				
		Communication

				Synchronous		:Synchronous means happening at the same time   			HTTP(RestTemplate,OpenFiegn,webclient)
				Asynchronous	:asynchronous means happening at different times    messageing protocols(KAFKA,activemq,rabbitmq)
		Postman/Swagger		
		
		spring boot 8080--->add starters -->openai
<dependency>
   <groupId>org.springdoc</groupId>
   <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
   <version>2.5.0</version>
</dependency>

browser 
-->http://localhost:8080/swagger-ui.html
		
FrontEnd:
=========				
				
			gmail:website:web pages

				static web pages	fixed content  gmail login
				dynamic web pages  JS				   gmail home
		
		
		HTML:	static web pages	 <> </>
		display the data 
				
			
			HTML-->Tim Berners LEE-->WWW--1991-->1993
			
			html5.2 2017
			
			welcome.html
		
	google	browser engine -->V8
	
	
	Document-->DOM TREE
	
	elements
	
		VScode
	 
CSS:to style our static (html)pages 	
		
			CSS3
		1.inline		< style="">
		2.internal		<head><style> .........  </head>
		3.external		mystles.css
		
		selectors:
			element selector		h1
			group selector			h1,p,body
			all/universal selector	*
			id selector			#
			class selector		.
		
		Bootstrap.css  -->X/Twiiter
		
		
		selector{propname:propvalue;.....}
		
Bootstrap:
===========
		it is html,css,javascript  framework given by twitter  
			5.x
		RWD:Responsive Web Design

	getbootstrap.com

	CDN
		col
		col-md
		col-sm
		col-lg
		col-xl
		col-xxl
		
Javascript:
==========
		Angular
		react
		jquery
		MERN
		MEAN
		node
		......
		
	1)front end validations
	2)can change HTMl Content
	3)can change CSS (Style)
	4)dx

	ECMAscript--jpa
	javascript----hibernate

		
	variables			datatype varname=value//static typed PL
	datatypes
	functions	
	object
	arrays
	string
	events
	regular expressions
	conditional and looping statements
	
	javascript dynamic typed lang
	
			var/let/const name=value;
	
		javscript
				inline		<body><script>
				internal	<head><script>
				external		myfunctions.js
				
				
			var varname=value; dynamic typed language
				
				function
				
				handling onclick/onsubmit/onkeyup
					
				array
				string
				object
				class
				inheritance.....
	
Typescript:Microsoft

		
		typescript=javascript+datattypes
		

angular =>.ts+html+css+spec.ts(Testing)



		var name="suresh";string ,boolean
			name=123;	number 

typescript static typed pl

			var name="suresh";	javascript
			var name:string="suresh" typescript
				name=123;invalid

		welcome.ts--->browser cannot understand ts
					browsers can understand only Javascript
			javac

			TSC
		ts------->js

		transapilation

Angular:
========
		Angular JS Framework
		React JS library
		......
					
					
					UI pages 
					
					component:reusable
					SPA vs MPA
					
					node js 
					node --version
					npm --version
					
					CLI
					
					babel
					
					@Component=ts+html+css
					
				
					
					ng new projectname
					ng --version
					(skip spec file) 
					ng generate component login --skip-tests true 
					ng g c login
					ng g s servicename
					ng g p pipename
					ng g d directivename
					ng serve -o --port newport
					
					
					angular directives:	*ngFor,*ngIf....
					
					@for
	Routing:
	
					
	angular forms
			
			template driven forms		ngForm--<form>
												<input  ngModel

				FormsModule
			
			model driven forms or reactive forms
												formgroup
												formcontrol
				ReactiveFormsModule	
					
					
					
@if (a > b) {
    {{a}} is greater than {{b}}
  } @else if (b > a) {
    {{a}} is less than {{b}}
  } @else {
    {{a}} is equal to {{b}}
  }					
					
					
					
					
		 custom pipe 
		 
		 @Pipe
		 
		 @Injectable
			{
			providedIn:"root/any/providers/custom"
			}
		
		class MyService{
		
			constructor(httpClient:HttpClient){
					
			}
		
		}
					 
					localstorage/sessionstorage
						 5mb
						 
						app component --->child component
											@Input
											@Output
											EventEmitter
						navigate()
							routerLink
							
							
							directives 
								structural	@for,@if,@switch
								attribute	ngclass,
								
								
						forms 
							template		--->	
							reactive/model  --->reactiveformmodules
						

parent-->child-->@Input
child-->parent-->@Output Eventemitter

	auth guards					
											
				ng generate guard auth						
					
					
					
			npm install json-server -g
Dept

Employees
	html,		@for`
	ts,		employees[]=[]
	css,
	spec.ts
	
Services:

			
			
EmployeeService	:		ng g service employeeservice  @Injectable

			HttpClient:@Injectable/@Component/@Pipe /@Directive ng g d dname 
			
				get("http://localhost:1234/employees/getEmployee/1"),post,put,delete....
			
		JSON-server
		
					npm install json-server 
				json-server --watch db.json --port=3001	
					
{
  "users": [
    {
      "id": 123,
      "name": "mahesh",
      "email": "mahesh@gmail.com"
    },
    {
      "id": 111,
      "name": "sandeep",
      "email": "sandeep.s@rpsconsulting.in"
    },
    {
      "id": 555,
      "name": "phanikumar",
      "email": "mahesh@gmail.com"
    }
  ]
}					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					